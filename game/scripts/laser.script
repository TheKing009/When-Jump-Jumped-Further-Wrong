local constants = require "game.modules.constants"

local groups = {hash("wall"), hash("enemy")}
local length = constants.NORTH * 1000;

go.property("target", vmath.vector3());
go.property("angle", vmath.quat());

function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	local pos = go.get_world_position()
	local to = pos + vmath.rotate(self.angle, length)
	if vmath.length(pos - to) > 0 then
		physics.ray_cast(pos, to, groups)
	end
	go.set_scale(vmath.vector3(length.y, 1 , 1))
end

function on_message(self, message_id, message, sender)
	if message_id == RAY_CAST_RESPONSE then
		--go.set_scale(vmath.vector3(1, length.y * message.fraction, 1))
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
