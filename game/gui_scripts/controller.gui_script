local LOAD_SCENE = hash("load_scene")
local PAUSE = hash("pause")

local UP = 270
local DOWN = -UP
local CENTER = 0
local LEFT = -540

local TRANSPARENT = vmath.vector4(1, 1, 1, 0)
local WHITE = vmath.vector4(1)

local function show(self, scene, level) 
	if self.current_proxy then 
		msg.post("/proxies#"..self.current_proxy, "unload") 
	end
	msg.post("/proxies#"..scene, "load") 
	self.current_proxy = scene
end

local function fade(self, scene)
	gui.animate(gui.get_node("fader"), "color.w", 1, go.EASING_LINEAR, 1, 0, function()
		show(self, scene)
		gui.animate(gui.get_node("fader"), "color.w", 0, go.EASING_LINEAR, 1, 0, function()
			--msg.post(self.scene, "enable")
			--self.scene = nil
		end)
	end)
end

function init(self)
	--seed the random
	math.randomseed(socket.gettime()* 10000)
	math.random();math.random();math.random()

	gui.set_render_order(10)
	
	fade(self, "intro1")

	defos.set_fullscreen(true)

	msg.post("@render:", "clear_color", {color = vmath.vector4(63/255, 56/255, 81/255, 1)})
	msg.post("/proxies", "acquire_input_focus")
end

function final(self)

end

function update(self, dt)

end

function on_message(self, message_id, message, sender)
	if message_id == LOAD_SCENE then
		fade(self, message.scene)
	elseif message_id == hash("proxy_loaded") then 
		msg.post(sender, "enable") 
		--self.scene = sender
	elseif message_id == hash("proxy_unloaded") then
	elseif message_id == PAUSE then
		if message.pause then
			msg.post("/proxies#main", "set_time_step", {factor = 0, mode = 1})
		else
			msg.post("/proxies#main", "set_time_step", {factor = 1, mode = 1})
		end
	end
end

function on_input(self, action_id, action)

end