local gamestate = require "game.modules.gamestate"
local gooey = require "gooey.gooey"
local game_settings = require "game.modules.game_settings"
local constants = require "game.modules.constants"
local player_data = require "game.modules.player_data"
local sounds = require "game.modules.sounds"

local dummies

local function shake(node, initial_scale)
	gui.cancel_animation(node, "scale.x")
	gui.cancel_animation(node, "scale.y")
	gui.set_scale(node, initial_scale)
	local scale = gui.get_scale(node)
	gui.set_scale(node, scale * 1.2)
	gui.animate(node, "scale.x", scale.x, gui.EASING_OUTELASTIC, 0.8)
	gui.animate(node, "scale.y", scale.y, gui.EASING_OUTELASTIC, 0.8, 0.05, function()
		gui.set_scale(node, initial_scale)
	end)
end

local function move_in()
	gui.set_position(gui.get_node("title"), vmath.vector3(-254, 500, 0))
	gui.set_position(gui.get_node("buttons"), vmath.vector3(0, -500, 0))
	
	gui.animate(gui.get_node("title"), "position", vmath.vector3(-254, 242, 0), gui.EASING_OUTELASTIC, 1)
	gui.animate(gui.get_node("buttons"), "position", vmath.vector3(0, -134, 0), gui.EASING_OUTELASTIC, 1, 0, function()
		gamestate.set("MENU")
	end)
end

local function move_out(fn)
	gui.animate(gui.get_node("bg"), "color.w", 0, gui.EASING_INBACK, 1)
	gui.animate(gui.get_node("title"), "position", vmath.vector3(-254, 500, 0), gui.EASING_INBACK, 1)
	gui.animate(gui.get_node("buttons"), "position", vmath.vector3(0, -500, 0), gui.EASING_INBACK, 1, 0, function()
		fn();
	end)
end

local function update_button(button, node)
	local scale = gui.get_scale(node)
	if button.over_now then
		gui.cancel_animation(node, "scale")
		gui.animate(node, "scale", 2 * 1.1, gui.EASING_LINEAR, 0.5)
	elseif not button.over then
		gui.cancel_animation(node, "scale")
		gui.animate(node, "scale", 2, gui.EASING_LINEAR, 0.5)
	end

	if button.pressed_now then
		shake(node, gui.get_scale(node))
	end
end

local function play()
	move_out(function()
		gamestate.set("PLAY")
		msg.post("#", "disable")
		msg.post("#char_select", "enable")

		for k, v in pairs(dummies) do
			msg.post(v, "enable")
		end
	end)
end

local function credits()
	move_out(function()
		gamestate.set("PLAY")
		msg.post("controller:/controller#controller", "load_scene", {scene = "credits"})
	end)
end

local function change_controls()
	if game_settings.input_type == constants.WASD then
		game_settings.input_type = constants.ARROW
		gui.set_text(gui.get_node("controls"), "Controls : Arrows + Mouse")
	elseif game_settings.input_type == constants.ARROW then
		game_settings.input_type = constants.WASD
		gui.set_text(gui.get_node("controls"), "Controls : WASD + Mouse")
	end
end

local function change_sound()
	game_settings.sfx = not game_settings.sfx
	sounds.change_sound_state()
	local text = game_settings.sfx and "Sound On" or "Sound Off"
	gui.set_text(gui.get_node("sound_text"), text)
end

local function change_music()
	game_settings.music = not game_settings.music
	sounds.change_sound_state()
	local text = game_settings.music and "Music On" or "Music Off"
	gui.set_text(gui.get_node("music_text"), text)
end

function init(self)
	sounds.change_sound_state()
	player_data.reset()
	gamestate.set("PAUSE")
	msg.post("#char_select", "disable")
	move_in()
	gooey.acquire_input()
	dummies = {}
end

function final(self)
	gooey.release_input()
end

function on_message(self, message_id, message, sender)
	if message_id == hash("register") then
		table.insert(dummies, message.id)
	end
end

function on_input(self, action_id, action)
	if gamestate.get() ~= "MENU" then
		return
	end
	
	gooey.button("play", action_id, action, play, function(button)
		update_button(button, gui.get_node("play_button"))
	end)
	gooey.button("controls", action_id, action, change_controls, function(button)
		update_button(button, gui.get_node("controls_button"))
	end)
	gooey.button("sound_text", action_id, action, change_sound, function(button)
		update_button(button, gui.get_node("sound_button"))
	end)
	gooey.button("music_text", action_id, action, change_music, function(button)
		update_button(button, gui.get_node("music_button"))
	end)
	gooey.button("credits", action_id, action, credits, function(button)
		update_button(button, gui.get_node("credits_button"))
	end)
end